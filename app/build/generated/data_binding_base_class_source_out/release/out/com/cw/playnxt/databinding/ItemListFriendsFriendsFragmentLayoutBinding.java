// Generated by view binder compiler. Do not edit!
package com.cw.playnxt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.playnxt.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListFriendsFriendsFragmentLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout btnFollow;

  @NonNull
  public final LinearLayout btnLogin;

  @NonNull
  public final LinearLayout btnUnFollow;

  @NonNull
  public final CircleImageView cvFriendsProfile;

  @NonNull
  public final CircleImageView cvFriendsProfile1;

  @NonNull
  public final ImageView ivFav;

  @NonNull
  public final ImageView ivUnfav;

  @NonNull
  public final LinearLayout llAfterAddingToWishlist;

  @NonNull
  public final LinearLayout llLikeUnlike;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final LinearLayout llTimeStamp;

  @NonNull
  public final TextView tvFav1;

  @NonNull
  public final TextView tvGameName;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvName1;

  @NonNull
  public final TextView tvTimeStamps;

  @NonNull
  public final TextView tvTimeStamps1;

  @NonNull
  public final TextView tvTotalLike;

  @NonNull
  public final TextView tvaddtobacklog;

  @NonNull
  public final TextView txtBtn;

  private ItemListFriendsFriendsFragmentLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout btnFollow, @NonNull LinearLayout btnLogin,
      @NonNull LinearLayout btnUnFollow, @NonNull CircleImageView cvFriendsProfile,
      @NonNull CircleImageView cvFriendsProfile1, @NonNull ImageView ivFav,
      @NonNull ImageView ivUnfav, @NonNull LinearLayout llAfterAddingToWishlist,
      @NonNull LinearLayout llLikeUnlike, @NonNull LinearLayout llMain,
      @NonNull LinearLayout llTimeStamp, @NonNull TextView tvFav1, @NonNull TextView tvGameName,
      @NonNull TextView tvName, @NonNull TextView tvName1, @NonNull TextView tvTimeStamps,
      @NonNull TextView tvTimeStamps1, @NonNull TextView tvTotalLike,
      @NonNull TextView tvaddtobacklog, @NonNull TextView txtBtn) {
    this.rootView = rootView;
    this.btnFollow = btnFollow;
    this.btnLogin = btnLogin;
    this.btnUnFollow = btnUnFollow;
    this.cvFriendsProfile = cvFriendsProfile;
    this.cvFriendsProfile1 = cvFriendsProfile1;
    this.ivFav = ivFav;
    this.ivUnfav = ivUnfav;
    this.llAfterAddingToWishlist = llAfterAddingToWishlist;
    this.llLikeUnlike = llLikeUnlike;
    this.llMain = llMain;
    this.llTimeStamp = llTimeStamp;
    this.tvFav1 = tvFav1;
    this.tvGameName = tvGameName;
    this.tvName = tvName;
    this.tvName1 = tvName1;
    this.tvTimeStamps = tvTimeStamps;
    this.tvTimeStamps1 = tvTimeStamps1;
    this.tvTotalLike = tvTotalLike;
    this.tvaddtobacklog = tvaddtobacklog;
    this.txtBtn = txtBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListFriendsFriendsFragmentLayoutBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListFriendsFriendsFragmentLayoutBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_friends_friends_fragment_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListFriendsFriendsFragmentLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFollow;
      LinearLayout btnFollow = ViewBindings.findChildViewById(rootView, id);
      if (btnFollow == null) {
        break missingId;
      }

      id = R.id.btnLogin;
      LinearLayout btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnUnFollow;
      LinearLayout btnUnFollow = ViewBindings.findChildViewById(rootView, id);
      if (btnUnFollow == null) {
        break missingId;
      }

      id = R.id.cvFriendsProfile;
      CircleImageView cvFriendsProfile = ViewBindings.findChildViewById(rootView, id);
      if (cvFriendsProfile == null) {
        break missingId;
      }

      id = R.id.cvFriendsProfile1;
      CircleImageView cvFriendsProfile1 = ViewBindings.findChildViewById(rootView, id);
      if (cvFriendsProfile1 == null) {
        break missingId;
      }

      id = R.id.ivFav;
      ImageView ivFav = ViewBindings.findChildViewById(rootView, id);
      if (ivFav == null) {
        break missingId;
      }

      id = R.id.ivUnfav;
      ImageView ivUnfav = ViewBindings.findChildViewById(rootView, id);
      if (ivUnfav == null) {
        break missingId;
      }

      id = R.id.llAfterAddingToWishlist;
      LinearLayout llAfterAddingToWishlist = ViewBindings.findChildViewById(rootView, id);
      if (llAfterAddingToWishlist == null) {
        break missingId;
      }

      id = R.id.llLikeUnlike;
      LinearLayout llLikeUnlike = ViewBindings.findChildViewById(rootView, id);
      if (llLikeUnlike == null) {
        break missingId;
      }

      id = R.id.llMain;
      LinearLayout llMain = ViewBindings.findChildViewById(rootView, id);
      if (llMain == null) {
        break missingId;
      }

      id = R.id.llTimeStamp;
      LinearLayout llTimeStamp = ViewBindings.findChildViewById(rootView, id);
      if (llTimeStamp == null) {
        break missingId;
      }

      id = R.id.tvFav1;
      TextView tvFav1 = ViewBindings.findChildViewById(rootView, id);
      if (tvFav1 == null) {
        break missingId;
      }

      id = R.id.tvGameName;
      TextView tvGameName = ViewBindings.findChildViewById(rootView, id);
      if (tvGameName == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvName1;
      TextView tvName1 = ViewBindings.findChildViewById(rootView, id);
      if (tvName1 == null) {
        break missingId;
      }

      id = R.id.tvTimeStamps;
      TextView tvTimeStamps = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeStamps == null) {
        break missingId;
      }

      id = R.id.tvTimeStamps1;
      TextView tvTimeStamps1 = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeStamps1 == null) {
        break missingId;
      }

      id = R.id.tvTotalLike;
      TextView tvTotalLike = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalLike == null) {
        break missingId;
      }

      id = R.id.tvaddtobacklog;
      TextView tvaddtobacklog = ViewBindings.findChildViewById(rootView, id);
      if (tvaddtobacklog == null) {
        break missingId;
      }

      id = R.id.txtBtn;
      TextView txtBtn = ViewBindings.findChildViewById(rootView, id);
      if (txtBtn == null) {
        break missingId;
      }

      return new ItemListFriendsFriendsFragmentLayoutBinding((RelativeLayout) rootView, btnFollow,
          btnLogin, btnUnFollow, cvFriendsProfile, cvFriendsProfile1, ivFav, ivUnfav,
          llAfterAddingToWishlist, llLikeUnlike, llMain, llTimeStamp, tvFav1, tvGameName, tvName,
          tvName1, tvTimeStamps, tvTimeStamps1, tvTotalLike, tvaddtobacklog, txtBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
