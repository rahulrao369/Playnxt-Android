// Generated by view binder compiler. Do not edit!
package com.cw.playnxt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.playnxt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPlaynxtPremiumBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final HeaderLayoutBinding bindingHeader;

  @NonNull
  public final LinearLayout btnBuy;

  @NonNull
  public final LinearLayout btnCancleSubscription;

  @NonNull
  public final ImageView ivPlan;

  @NonNull
  public final LinearLayout llGrace;

  @NonNull
  public final LinearLayout llUpper;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvExpiryDate;

  @NonNull
  public final TextView tvPlanTitle;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvPurchaseDate;

  @NonNull
  public final TextView tvRemainingDays;

  @NonNull
  public final TextView tvValidUpto;

  @NonNull
  public final TextView txtBtn;

  private ActivityPlaynxtPremiumBinding(@NonNull RelativeLayout rootView,
      @NonNull HeaderLayoutBinding bindingHeader, @NonNull LinearLayout btnBuy,
      @NonNull LinearLayout btnCancleSubscription, @NonNull ImageView ivPlan,
      @NonNull LinearLayout llGrace, @NonNull LinearLayout llUpper, @NonNull TextView tvDescription,
      @NonNull TextView tvExpiryDate, @NonNull TextView tvPlanTitle, @NonNull TextView tvPrice,
      @NonNull TextView tvPurchaseDate, @NonNull TextView tvRemainingDays,
      @NonNull TextView tvValidUpto, @NonNull TextView txtBtn) {
    this.rootView = rootView;
    this.bindingHeader = bindingHeader;
    this.btnBuy = btnBuy;
    this.btnCancleSubscription = btnCancleSubscription;
    this.ivPlan = ivPlan;
    this.llGrace = llGrace;
    this.llUpper = llUpper;
    this.tvDescription = tvDescription;
    this.tvExpiryDate = tvExpiryDate;
    this.tvPlanTitle = tvPlanTitle;
    this.tvPrice = tvPrice;
    this.tvPurchaseDate = tvPurchaseDate;
    this.tvRemainingDays = tvRemainingDays;
    this.tvValidUpto = tvValidUpto;
    this.txtBtn = txtBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlaynxtPremiumBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlaynxtPremiumBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_playnxt_premium, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlaynxtPremiumBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bindingHeader;
      View bindingHeader = ViewBindings.findChildViewById(rootView, id);
      if (bindingHeader == null) {
        break missingId;
      }
      HeaderLayoutBinding binding_bindingHeader = HeaderLayoutBinding.bind(bindingHeader);

      id = R.id.btnBuy;
      LinearLayout btnBuy = ViewBindings.findChildViewById(rootView, id);
      if (btnBuy == null) {
        break missingId;
      }

      id = R.id.btnCancleSubscription;
      LinearLayout btnCancleSubscription = ViewBindings.findChildViewById(rootView, id);
      if (btnCancleSubscription == null) {
        break missingId;
      }

      id = R.id.ivPlan;
      ImageView ivPlan = ViewBindings.findChildViewById(rootView, id);
      if (ivPlan == null) {
        break missingId;
      }

      id = R.id.llGrace;
      LinearLayout llGrace = ViewBindings.findChildViewById(rootView, id);
      if (llGrace == null) {
        break missingId;
      }

      id = R.id.llUpper;
      LinearLayout llUpper = ViewBindings.findChildViewById(rootView, id);
      if (llUpper == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvExpiryDate;
      TextView tvExpiryDate = ViewBindings.findChildViewById(rootView, id);
      if (tvExpiryDate == null) {
        break missingId;
      }

      id = R.id.tvPlanTitle;
      TextView tvPlanTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvPlanTitle == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvPurchaseDate;
      TextView tvPurchaseDate = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseDate == null) {
        break missingId;
      }

      id = R.id.tvRemainingDays;
      TextView tvRemainingDays = ViewBindings.findChildViewById(rootView, id);
      if (tvRemainingDays == null) {
        break missingId;
      }

      id = R.id.tvValidUpto;
      TextView tvValidUpto = ViewBindings.findChildViewById(rootView, id);
      if (tvValidUpto == null) {
        break missingId;
      }

      id = R.id.txtBtn;
      TextView txtBtn = ViewBindings.findChildViewById(rootView, id);
      if (txtBtn == null) {
        break missingId;
      }

      return new ActivityPlaynxtPremiumBinding((RelativeLayout) rootView, binding_bindingHeader,
          btnBuy, btnCancleSubscription, ivPlan, llGrace, llUpper, tvDescription, tvExpiryDate,
          tvPlanTitle, tvPrice, tvPurchaseDate, tvRemainingDays, tvValidUpto, txtBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
