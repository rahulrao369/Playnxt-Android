// Generated by view binder compiler. Do not edit!
package com.cw.playnxt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.playnxt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListSubscriptionPlanInsideListLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivCrossFreeUser;

  @NonNull
  public final ImageView ivRightFreeUser;

  @NonNull
  public final ImageView ivinfinityFreeUser;

  @NonNull
  public final TextView tvFeatures;

  @NonNull
  public final TextView tvFreeUser;

  private ItemListSubscriptionPlanInsideListLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView ivCrossFreeUser, @NonNull ImageView ivRightFreeUser,
      @NonNull ImageView ivinfinityFreeUser, @NonNull TextView tvFeatures,
      @NonNull TextView tvFreeUser) {
    this.rootView = rootView;
    this.ivCrossFreeUser = ivCrossFreeUser;
    this.ivRightFreeUser = ivRightFreeUser;
    this.ivinfinityFreeUser = ivinfinityFreeUser;
    this.tvFeatures = tvFeatures;
    this.tvFreeUser = tvFreeUser;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListSubscriptionPlanInsideListLayoutBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListSubscriptionPlanInsideListLayoutBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_subscription_plan_inside_list_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListSubscriptionPlanInsideListLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivCrossFreeUser;
      ImageView ivCrossFreeUser = ViewBindings.findChildViewById(rootView, id);
      if (ivCrossFreeUser == null) {
        break missingId;
      }

      id = R.id.ivRightFreeUser;
      ImageView ivRightFreeUser = ViewBindings.findChildViewById(rootView, id);
      if (ivRightFreeUser == null) {
        break missingId;
      }

      id = R.id.ivinfinityFreeUser;
      ImageView ivinfinityFreeUser = ViewBindings.findChildViewById(rootView, id);
      if (ivinfinityFreeUser == null) {
        break missingId;
      }

      id = R.id.tvFeatures;
      TextView tvFeatures = ViewBindings.findChildViewById(rootView, id);
      if (tvFeatures == null) {
        break missingId;
      }

      id = R.id.tvFreeUser;
      TextView tvFreeUser = ViewBindings.findChildViewById(rootView, id);
      if (tvFreeUser == null) {
        break missingId;
      }

      return new ItemListSubscriptionPlanInsideListLayoutBinding((RelativeLayout) rootView,
          ivCrossFreeUser, ivRightFreeUser, ivinfinityFreeUser, tvFeatures, tvFreeUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
