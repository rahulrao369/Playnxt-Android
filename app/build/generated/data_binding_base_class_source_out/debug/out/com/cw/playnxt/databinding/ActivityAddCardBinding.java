// Generated by view binder compiler. Do not edit!
package com.cw.playnxt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cooltechworks.creditcarddesign.CreditCardView;
import com.cw.playnxt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final HeaderLayoutBinding bindingHeader;

  @NonNull
  public final Button btnApply;

  @NonNull
  public final LinearLayout btnPayNow;

  @NonNull
  public final CheckBox cbrecurring;

  @NonNull
  public final CreditCardView creditCardView;

  @NonNull
  public final EditText etAccountHolderName;

  @NonNull
  public final EditText etAccountNo;

  @NonNull
  public final EditText etCVV;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etExpringDate;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final LinearLayout llNext;

  @NonNull
  public final ProgressBar progressBar1;

  @NonNull
  public final RelativeLayout rlProgressBar;

  @NonNull
  public final TextView tvActualAmt;

  @NonNull
  public final TextView tvDiscount;

  @NonNull
  public final TextView tvTotal;

  @NonNull
  public final TextView tvrecurring;

  @NonNull
  public final TextView txtBtn;

  private ActivityAddCardBinding(@NonNull RelativeLayout rootView,
      @NonNull HeaderLayoutBinding bindingHeader, @NonNull Button btnApply,
      @NonNull LinearLayout btnPayNow, @NonNull CheckBox cbrecurring,
      @NonNull CreditCardView creditCardView, @NonNull EditText etAccountHolderName,
      @NonNull EditText etAccountNo, @NonNull EditText etCVV, @NonNull EditText etEmail,
      @NonNull EditText etExpringDate, @NonNull LinearLayout llMain, @NonNull LinearLayout llNext,
      @NonNull ProgressBar progressBar1, @NonNull RelativeLayout rlProgressBar,
      @NonNull TextView tvActualAmt, @NonNull TextView tvDiscount, @NonNull TextView tvTotal,
      @NonNull TextView tvrecurring, @NonNull TextView txtBtn) {
    this.rootView = rootView;
    this.bindingHeader = bindingHeader;
    this.btnApply = btnApply;
    this.btnPayNow = btnPayNow;
    this.cbrecurring = cbrecurring;
    this.creditCardView = creditCardView;
    this.etAccountHolderName = etAccountHolderName;
    this.etAccountNo = etAccountNo;
    this.etCVV = etCVV;
    this.etEmail = etEmail;
    this.etExpringDate = etExpringDate;
    this.llMain = llMain;
    this.llNext = llNext;
    this.progressBar1 = progressBar1;
    this.rlProgressBar = rlProgressBar;
    this.tvActualAmt = tvActualAmt;
    this.tvDiscount = tvDiscount;
    this.tvTotal = tvTotal;
    this.tvrecurring = tvrecurring;
    this.txtBtn = txtBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bindingHeader;
      View bindingHeader = ViewBindings.findChildViewById(rootView, id);
      if (bindingHeader == null) {
        break missingId;
      }
      HeaderLayoutBinding binding_bindingHeader = HeaderLayoutBinding.bind(bindingHeader);

      id = R.id.btnApply;
      Button btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnPayNow;
      LinearLayout btnPayNow = ViewBindings.findChildViewById(rootView, id);
      if (btnPayNow == null) {
        break missingId;
      }

      id = R.id.cbrecurring;
      CheckBox cbrecurring = ViewBindings.findChildViewById(rootView, id);
      if (cbrecurring == null) {
        break missingId;
      }

      id = R.id.creditCardView;
      CreditCardView creditCardView = ViewBindings.findChildViewById(rootView, id);
      if (creditCardView == null) {
        break missingId;
      }

      id = R.id.etAccountHolderName;
      EditText etAccountHolderName = ViewBindings.findChildViewById(rootView, id);
      if (etAccountHolderName == null) {
        break missingId;
      }

      id = R.id.etAccountNo;
      EditText etAccountNo = ViewBindings.findChildViewById(rootView, id);
      if (etAccountNo == null) {
        break missingId;
      }

      id = R.id.etCVV;
      EditText etCVV = ViewBindings.findChildViewById(rootView, id);
      if (etCVV == null) {
        break missingId;
      }

      id = R.id.etEmail;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etExpringDate;
      EditText etExpringDate = ViewBindings.findChildViewById(rootView, id);
      if (etExpringDate == null) {
        break missingId;
      }

      id = R.id.llMain;
      LinearLayout llMain = ViewBindings.findChildViewById(rootView, id);
      if (llMain == null) {
        break missingId;
      }

      id = R.id.llNext;
      LinearLayout llNext = ViewBindings.findChildViewById(rootView, id);
      if (llNext == null) {
        break missingId;
      }

      id = R.id.progressBar1;
      ProgressBar progressBar1 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar1 == null) {
        break missingId;
      }

      id = R.id.rlProgressBar;
      RelativeLayout rlProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (rlProgressBar == null) {
        break missingId;
      }

      id = R.id.tvActualAmt;
      TextView tvActualAmt = ViewBindings.findChildViewById(rootView, id);
      if (tvActualAmt == null) {
        break missingId;
      }

      id = R.id.tvDiscount;
      TextView tvDiscount = ViewBindings.findChildViewById(rootView, id);
      if (tvDiscount == null) {
        break missingId;
      }

      id = R.id.tvTotal;
      TextView tvTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvTotal == null) {
        break missingId;
      }

      id = R.id.tvrecurring;
      TextView tvrecurring = ViewBindings.findChildViewById(rootView, id);
      if (tvrecurring == null) {
        break missingId;
      }

      id = R.id.txtBtn;
      TextView txtBtn = ViewBindings.findChildViewById(rootView, id);
      if (txtBtn == null) {
        break missingId;
      }

      return new ActivityAddCardBinding((RelativeLayout) rootView, binding_bindingHeader, btnApply,
          btnPayNow, cbrecurring, creditCardView, etAccountHolderName, etAccountNo, etCVV, etEmail,
          etExpringDate, llMain, llNext, progressBar1, rlProgressBar, tvActualAmt, tvDiscount,
          tvTotal, tvrecurring, txtBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
