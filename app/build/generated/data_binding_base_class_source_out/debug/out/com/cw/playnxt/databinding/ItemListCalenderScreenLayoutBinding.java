// Generated by view binder compiler. Do not edit!
package com.cw.playnxt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.playnxt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListCalenderScreenLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivDeleteEvent;

  @NonNull
  public final ImageView ivEditEvent;

  @NonNull
  public final TextView tvGameTitle;

  @NonNull
  public final TextView tvPlannedEnd;

  @NonNull
  public final TextView tvPlannedStart;

  private ItemListCalenderScreenLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView ivDeleteEvent, @NonNull ImageView ivEditEvent,
      @NonNull TextView tvGameTitle, @NonNull TextView tvPlannedEnd,
      @NonNull TextView tvPlannedStart) {
    this.rootView = rootView;
    this.ivDeleteEvent = ivDeleteEvent;
    this.ivEditEvent = ivEditEvent;
    this.tvGameTitle = tvGameTitle;
    this.tvPlannedEnd = tvPlannedEnd;
    this.tvPlannedStart = tvPlannedStart;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListCalenderScreenLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListCalenderScreenLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_calender_screen_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListCalenderScreenLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivDeleteEvent;
      ImageView ivDeleteEvent = ViewBindings.findChildViewById(rootView, id);
      if (ivDeleteEvent == null) {
        break missingId;
      }

      id = R.id.ivEditEvent;
      ImageView ivEditEvent = ViewBindings.findChildViewById(rootView, id);
      if (ivEditEvent == null) {
        break missingId;
      }

      id = R.id.tvGameTitle;
      TextView tvGameTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvGameTitle == null) {
        break missingId;
      }

      id = R.id.tvPlannedEnd;
      TextView tvPlannedEnd = ViewBindings.findChildViewById(rootView, id);
      if (tvPlannedEnd == null) {
        break missingId;
      }

      id = R.id.tvPlannedStart;
      TextView tvPlannedStart = ViewBindings.findChildViewById(rootView, id);
      if (tvPlannedStart == null) {
        break missingId;
      }

      return new ItemListCalenderScreenLayoutBinding((LinearLayout) rootView, ivDeleteEvent,
          ivEditEvent, tvGameTitle, tvPlannedEnd, tvPlannedStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
