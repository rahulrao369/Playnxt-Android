// Generated by view binder compiler. Do not edit!
package com.cw.playnxt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.playnxt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListXboxGameInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivDeleteNote;

  @NonNull
  public final ImageView ivEditNote;

  @NonNull
  public final TextView tvCreatedOn;

  @NonNull
  public final TextView tvGameNote;

  private ItemListXboxGameInfoBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView ivDeleteNote, @NonNull ImageView ivEditNote, @NonNull TextView tvCreatedOn,
      @NonNull TextView tvGameNote) {
    this.rootView = rootView;
    this.ivDeleteNote = ivDeleteNote;
    this.ivEditNote = ivEditNote;
    this.tvCreatedOn = tvCreatedOn;
    this.tvGameNote = tvGameNote;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListXboxGameInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListXboxGameInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_xbox_game_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListXboxGameInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivDeleteNote;
      ImageView ivDeleteNote = ViewBindings.findChildViewById(rootView, id);
      if (ivDeleteNote == null) {
        break missingId;
      }

      id = R.id.ivEditNote;
      ImageView ivEditNote = ViewBindings.findChildViewById(rootView, id);
      if (ivEditNote == null) {
        break missingId;
      }

      id = R.id.tvCreatedOn;
      TextView tvCreatedOn = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatedOn == null) {
        break missingId;
      }

      id = R.id.tvGameNote;
      TextView tvGameNote = ViewBindings.findChildViewById(rootView, id);
      if (tvGameNote == null) {
        break missingId;
      }

      return new ItemListXboxGameInfoBinding((LinearLayout) rootView, ivDeleteNote, ivEditNote,
          tvCreatedOn, tvGameNote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
